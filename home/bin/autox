#!/usr/bin/env node
const { spawn } = require("child_process");
const { resolve } = require("path");

console.log("spawning udevadm monitor");
const udevadmMonitor = spawn(
  "udevadm",
  ["monitor", "-s", "drm", "-s ", "input", "-k"],
  {
    encoding: "utf-8",
  }
);
process.on("exit", () => {
  console.log("killing udevadm monitor");
  udevadmMonitor.kill();
});

let configChild = "waiting";
setTimeout(() => {
  console.log("starting to respond to monitor data");
  configChild = null;
}, 1_000);

udevadmMonitor.stdout.on("data", async (data) => {
  if (!configChild) {
    console.log("received monitor data", data);
    await new Promise((resolve) => setTimeout(resolve, 1_000));
    console.log("spawning config process");
    configChild = spawn(resolve(process.env.HOME, ".x.sh"), {
      stdio: "inherit",
    });
    configChild.on("exit", () => {
      console.log("config process exited");
      configChild = null;
    });
  }
});
