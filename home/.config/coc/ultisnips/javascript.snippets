# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet "c." "console.log" bA
console.log(${0:'hi'});
endsnippet
snippet "c" "console.log" b
console.log(${0:'hi'});
endsnippet

snippet "fn" "arrow function" iw
($1) => {
  $0
}
endsnippet
snippet "afn" "async arrow function" iw
async ($1) => {
  $0
}
endsnippet
snippet "async" "async arrow function" iw
async ($1) => {
  $0
}
endsnippet

snippet "test" "test case" b
test('$1', async () => {
  $0
});
endsnippet
snippet "it" "test case" b
it('$1', async () => {
  $0
});
endsnippet
snippet "describe" "describe block" b
describe('$1', () => {
  $0
});
endsnippet

snippet "import *" "import namespace" bA
import * as $1 from '$2';
endsnippet

snippet "import React" "import React" bA
import React$0 from 'react';
endsnippet
snippet "import" "import React" b
import React from 'react';
endsnippet

snippet "comp" "React component file" b
import React from 'react';

const $1 = () => {
  $0
  return null;
}
export default $1;
endsnippet
